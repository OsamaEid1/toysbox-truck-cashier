{"ast":null,"code":"export const getProductByBarcode = async barcode => {\n  try {\n    const response = await fetch(\"db/products.json\");\n    if (!response.ok) {\n      throw new Error('Failed to fetch data');\n    }\n    const data = await response.json();\n    const product = data.find(product => product.barcode === barcode);\n    if (!product) {\n      throw new Error('Product not found');\n    }\n    return product;\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    return null;\n  }\n};\nexport const addNewSell = async product => {\n  try {\n    const response = await fetch('../public/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(product)\n    });\n    if (!response.ok) {\n      const errorMessage = await response.text();\n      throw new Error(`Failed to post data: ${errorMessage}`);\n    }\n    alert('Successful Sale!');\n  } catch (error) {\n    alert('Failed Sale!');\n    console.error('Error posting data:', error);\n  }\n};","map":{"version":3,"names":["getProductByBarcode","barcode","response","fetch","ok","Error","data","json","product","find","error","console","addNewSell","method","headers","body","JSON","stringify","errorMessage","text","alert"],"sources":["D:/web/Work/ToysBox/Mini Cashear System/mini-toysBox-car-casher-sys/src/helpers.js"],"sourcesContent":["export const getProductByBarcode = async (barcode) => {\r\n    try {\r\n        const response = await fetch(\"db/products.json\");\r\n        if (!response.ok) {\r\n            throw new Error('Failed to fetch data');\r\n        }\r\n        \r\n        const data = await response.json();\r\n        const product = data.find((product) => product.barcode === barcode);\r\n        if (!product) {\r\n            throw new Error('Product not found');\r\n        }\r\n        return product;\r\n    } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        return null;\r\n    }\r\n};\r\n\r\nexport const addNewSell = async (product) => {\r\n    try {\r\n        const response = await fetch('../public/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(product),\r\n        });\r\n        if (!response.ok) {\r\n            const errorMessage = await response.text();\r\n            throw new Error(`Failed to post data: ${errorMessage}`);\r\n        }\r\n\r\n        alert('Successful Sale!');\r\n    } catch (error) {\r\n        alert('Failed Sale!');\r\n        console.error('Error posting data:', error);\r\n    }\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,mBAAmB,GAAG,MAAOC,OAAO,IAAK;EAClD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkB,CAAC;IAChD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;IAC3C;IAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,MAAMC,OAAO,GAAGF,IAAI,CAACG,IAAI,CAAED,OAAO,IAAKA,OAAO,CAACP,OAAO,KAAKA,OAAO,CAAC;IACnE,IAAI,CAACO,OAAO,EAAE;MACV,MAAM,IAAIH,KAAK,CAAC,mBAAmB,CAAC;IACxC;IACA,OAAOG,OAAO;EAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,OAAO,IAAI;EACf;AACJ,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,MAAOJ,OAAO,IAAK;EACzC,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;MACvCU,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,OAAO;IAChC,CAAC,CAAC;IACF,IAAI,CAACN,QAAQ,CAACE,EAAE,EAAE;MACd,MAAMc,YAAY,GAAG,MAAMhB,QAAQ,CAACiB,IAAI,CAAC,CAAC;MAC1C,MAAM,IAAId,KAAK,CAAE,wBAAuBa,YAAa,EAAC,CAAC;IAC3D;IAEAE,KAAK,CAAC,kBAAkB,CAAC;EAC7B,CAAC,CAAC,OAAOV,KAAK,EAAE;IACZU,KAAK,CAAC,cAAc,CAAC;IACrBT,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;EAC/C;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}